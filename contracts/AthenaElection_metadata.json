{
	"compiler": {
		"version": "0.8.30+commit.73712a01"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "initialName",
						"type": "string"
					},
					{
						"internalType": "string[]",
						"name": "candidateNames",
						"type": "string[]"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "candidateId",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "name",
						"type": "string"
					}
				],
				"name": "CandidateAdded",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "electionId",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "name",
						"type": "string"
					}
				],
				"name": "ElectionClosed",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "electionId",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "name",
						"type": "string"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "candidateCount",
						"type": "uint256"
					}
				],
				"name": "ElectionConfigured",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "electionId",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "name",
						"type": "string"
					}
				],
				"name": "ElectionOpened",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "electionId",
						"type": "uint256"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "voter",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "candidateId",
						"type": "uint256"
					}
				],
				"name": "VoteCast",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "name",
						"type": "string"
					}
				],
				"name": "addCandidate",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "candidateCount",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "closeElection",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "newName",
						"type": "string"
					},
					{
						"internalType": "string[]",
						"name": "candidateNames",
						"type": "string[]"
					}
				],
				"name": "configureElection",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "electionId",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "electionName",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "electionOpen",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "candidateId",
						"type": "uint256"
					}
				],
				"name": "getCandidate",
				"outputs": [
					{
						"internalType": "string",
						"name": "name",
						"type": "string"
					},
					{
						"internalType": "uint256",
						"name": "voteCount",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getCandidates",
				"outputs": [
					{
						"components": [
							{
								"internalType": "string",
								"name": "name",
								"type": "string"
							},
							{
								"internalType": "uint256",
								"name": "voteCount",
								"type": "uint256"
							}
						],
						"internalType": "struct AthenaElection.Candidate[]",
						"name": "",
						"type": "tuple[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "hasAddressVoted",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "openElection",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "candidateId",
						"type": "uint256"
					}
				],
				"name": "vote",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"configureElection(string,string[])": {
					"params": {
						"candidateNames": "Lista inicial de candidatos",
						"newName": "Nome amigável da eleição"
					}
				},
				"vote(uint256)": {
					"params": {
						"candidateId": "Índice do candidato no array"
					}
				}
			},
			"title": "AthenaElection - contrato simples de votação para testes em testnets Ethereum",
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"addCandidate(string)": {
					"notice": "Adiciona um candidato antes da eleição abrir"
				},
				"candidateCount()": {
					"notice": "Retorna o total de candidatos configurados"
				},
				"closeElection()": {
					"notice": "Encerra a eleição atual (somente owner)"
				},
				"configureElection(string,string[])": {
					"notice": "Permite configurar uma nova eleição (somente owner) enquanto estiver fechada"
				},
				"getCandidate(uint256)": {
					"notice": "Retorna os dados de um candidato específico"
				},
				"getCandidates()": {
					"notice": "Retorna todos os candidatos configurados (nome e votos)"
				},
				"hasAddressVoted(address)": {
					"notice": "Verifica se um endereço já votou na eleição atual"
				},
				"openElection()": {
					"notice": "Abre a eleição para votação (somente owner)"
				},
				"vote(uint256)": {
					"notice": "Registra um voto para um candidato pelo índice"
				}
			},
			"notice": "Permite configurar eleições, abrir/fechar votação e registrar votos on-chain",
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/AthenasElection.sol": "AthenaElection"
		},
		"evmVersion": "prague",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/AthenasElection.sol": {
			"keccak256": "0x56abb45c59e3c8fca2d53cd7af2a731c824f85ed7cf78049e5ce8e830c182ca6",
			"license": "MIT",
			"urls": [
				"bzz-raw://a04cefa76a351798299e0eb6863766a625fd2233825ddb3ba45a68351db81d00",
				"dweb:/ipfs/QmZyzXdvSXosSnnfbPSKxMu59AYjaVziHz6znna4TvfHk6"
			]
		}
	},
	"version": 1
}